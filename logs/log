[INFO] [2018-05-14 21:38:13][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@694f9431: display name [org.springframework.context.support.ClassPathXmlApplicationContext@694f9431]; startup date [Mon May 14 21:38:13 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-14 21:38:13][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-14 21:38:13][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-14 21:38:13][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-14 21:38:13][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-14 21:38:13][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-14 21:38:13][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-14 21:38:13][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-14 21:38:13][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-14 21:38:13][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[INFO] [2018-05-14 21:38:13][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [provider.xml]
[DEBUG] [2018-05-14 21:38:13][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-05-14 21:38:13][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-05-14 21:38:13][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
[DEBUG] [2018-05-14 21:38:13][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
[DEBUG] [2018-05-14 21:38:13][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-05-14 21:38:13][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-05-14 21:38:13][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
[INFO] [2018-05-14 21:38:13][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-05-14 21:38:13][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [provider.xml]
[INFO] [2018-05-14 21:38:13][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@694f9431]: org.springframework.beans.factory.support.DefaultListableBeanFactory@3cb5cdba
[DEBUG] [2018-05-14 21:38:13][org.springframework.context.support.ClassPathXmlApplicationContext]5 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@694f9431: display name [org.springframework.context.support.ClassPathXmlApplicationContext@694f9431]; startup date [Mon May 14 21:38:13 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-14 21:38:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Ignoring bean class loading failure for bean 'demoService'
org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [com.cn.provider.impl.DemoServiceImpl] for bean with name 'demoService' defined in class path resource [provider.xml]; nested exception is java.lang.ClassNotFoundException: com.cn.provider.impl.DemoServiceImpl
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1141)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:222)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:505)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:362)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.wx.provider.Provider.main(Provider.java:7)
Caused by: java.lang.ClassNotFoundException: com.cn.provider.impl.DemoServiceImpl
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:211)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:385)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1138)
	... 8 more
[DEBUG] [2018-05-14 21:38:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Ignoring bean class loading failure for bean 'demoService'
org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [com.cn.provider.impl.DemoServiceImpl] for bean with name 'demoService' defined in class path resource [provider.xml]; nested exception is java.lang.ClassNotFoundException: com.cn.provider.impl.DemoServiceImpl
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1141)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:222)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:563)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:365)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.wx.provider.Provider.main(Provider.java:7)
Caused by: java.lang.ClassNotFoundException: com.cn.provider.impl.DemoServiceImpl
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:211)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:385)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1138)
	... 8 more
[DEBUG] [2018-05-14 21:38:13][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@3d24753a]
[DEBUG] [2018-05-14 21:38:13][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@506e6d5e]
[DEBUG] [2018-05-14 21:38:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Ignoring bean class loading failure for bean 'demoService'
org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [com.cn.provider.impl.DemoServiceImpl] for bean with name 'demoService' defined in class path resource [provider.xml]; nested exception is java.lang.ClassNotFoundException: com.cn.provider.impl.DemoServiceImpl
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1141)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:303)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:947)
	at org.springframework.context.support.AbstractApplicationContext.registerListeners(AbstractApplicationContext.java:701)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:377)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.wx.provider.Provider.main(Provider.java:7)
Caused by: java.lang.ClassNotFoundException: com.cn.provider.impl.DemoServiceImpl
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:211)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:385)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1138)
	... 10 more
[DEBUG] [2018-05-14 21:38:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.cn.provider.DemoService'
[DEBUG] [2018-05-14 21:38:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.cn.provider.DemoService'
[DEBUG] [2018-05-14 21:38:13][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 21:38:13][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 21:38:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.cn.provider.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-05-14 21:38:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-05-14 21:38:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[INFO] [2018-05-14 21:38:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3cb5cdba: defining beans [demoService,wuxi-dubbo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.cn.provider.DemoService]; root of factory hierarchy
[INFO] [2018-05-14 21:38:13][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-14 21:38:13][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [], dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-14 21:39:01][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@694f9431: display name [org.springframework.context.support.ClassPathXmlApplicationContext@694f9431]; startup date [Mon May 14 21:39:01 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-14 21:39:01][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-14 21:39:01][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-14 21:39:01][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-14 21:39:01][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-14 21:39:01][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-14 21:39:01][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-14 21:39:01][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-14 21:39:01][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-14 21:39:01][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[INFO] [2018-05-14 21:39:01][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [provider.xml]
[DEBUG] [2018-05-14 21:39:01][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-05-14 21:39:01][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-05-14 21:39:01][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
[DEBUG] [2018-05-14 21:39:01][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
[DEBUG] [2018-05-14 21:39:01][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-05-14 21:39:01][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-05-14 21:39:01][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
[INFO] [2018-05-14 21:39:01][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-05-14 21:39:02][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [provider.xml]
[INFO] [2018-05-14 21:39:02][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@694f9431]: org.springframework.beans.factory.support.DefaultListableBeanFactory@3cb5cdba
[DEBUG] [2018-05-14 21:39:02][org.springframework.context.support.ClassPathXmlApplicationContext]5 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@694f9431: display name [org.springframework.context.support.ClassPathXmlApplicationContext@694f9431]; startup date [Mon May 14 21:39:01 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-14 21:39:02][org.springframework.beans.factory.support.DefaultListableBeanFactory]Ignoring bean class loading failure for bean 'demoService'
org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [com.cn.provider.impl.DemoServiceImpl] for bean with name 'demoService' defined in class path resource [provider.xml]; nested exception is java.lang.ClassNotFoundException: com.cn.provider.impl.DemoServiceImpl
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1141)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:222)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:505)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:362)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.wx.provider.Provider.main(Provider.java:7)
Caused by: java.lang.ClassNotFoundException: com.cn.provider.impl.DemoServiceImpl
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:211)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:385)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1138)
	... 8 more
[DEBUG] [2018-05-14 21:39:02][org.springframework.beans.factory.support.DefaultListableBeanFactory]Ignoring bean class loading failure for bean 'demoService'
org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [com.cn.provider.impl.DemoServiceImpl] for bean with name 'demoService' defined in class path resource [provider.xml]; nested exception is java.lang.ClassNotFoundException: com.cn.provider.impl.DemoServiceImpl
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1141)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:222)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:563)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:365)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.wx.provider.Provider.main(Provider.java:7)
Caused by: java.lang.ClassNotFoundException: com.cn.provider.impl.DemoServiceImpl
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:211)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:385)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1138)
	... 8 more
[DEBUG] [2018-05-14 21:39:02][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@3d24753a]
[DEBUG] [2018-05-14 21:39:02][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@506e6d5e]
[DEBUG] [2018-05-14 21:39:02][org.springframework.beans.factory.support.DefaultListableBeanFactory]Ignoring bean class loading failure for bean 'demoService'
org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [com.cn.provider.impl.DemoServiceImpl] for bean with name 'demoService' defined in class path resource [provider.xml]; nested exception is java.lang.ClassNotFoundException: com.cn.provider.impl.DemoServiceImpl
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1141)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1177)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:303)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:947)
	at org.springframework.context.support.AbstractApplicationContext.registerListeners(AbstractApplicationContext.java:701)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:377)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.wx.provider.Provider.main(Provider.java:7)
Caused by: java.lang.ClassNotFoundException: com.cn.provider.impl.DemoServiceImpl
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:211)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:385)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1138)
	... 10 more
[DEBUG] [2018-05-14 21:39:02][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.wx.provider.DemoService'
[DEBUG] [2018-05-14 21:39:02][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.wx.provider.DemoService'
[DEBUG] [2018-05-14 21:39:02][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 21:39:02][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 21:39:02][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.wx.provider.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-05-14 21:39:02][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-05-14 21:39:02][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[INFO] [2018-05-14 21:39:02][org.springframework.beans.factory.support.DefaultListableBeanFactory]Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3cb5cdba: defining beans [demoService,wuxi-dubbo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.wx.provider.DemoService]; root of factory hierarchy
[INFO] [2018-05-14 21:39:02][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-14 21:39:02][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [], dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-14 21:39:50][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@694f9431: display name [org.springframework.context.support.ClassPathXmlApplicationContext@694f9431]; startup date [Mon May 14 21:39:50 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-14 21:39:50][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-14 21:39:50][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-14 21:39:50][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-14 21:39:50][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-14 21:39:50][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-14 21:39:50][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-14 21:39:50][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-14 21:39:50][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-14 21:39:50][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[INFO] [2018-05-14 21:39:50][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [provider.xml]
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
[INFO] [2018-05-14 21:39:50][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [provider.xml]
[INFO] [2018-05-14 21:39:50][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@694f9431]: org.springframework.beans.factory.support.DefaultListableBeanFactory@3cb5cdba
[DEBUG] [2018-05-14 21:39:50][org.springframework.context.support.ClassPathXmlApplicationContext]5 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@694f9431: display name [org.springframework.context.support.ClassPathXmlApplicationContext@694f9431]; startup date [Mon May 14 21:39:50 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-14 21:39:50][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@511baa65]
[DEBUG] [2018-05-14 21:39:50][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@59a6e353]
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.wx.provider.DemoService'
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.wx.provider.DemoService'
[DEBUG] [2018-05-14 21:39:50][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 21:39:50][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.wx.provider.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.wx.provider.DemoService'
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'wuxi-dubbo-provider'
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'wuxi-dubbo-provider'
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'wuxi-dubbo-provider' to allow for resolving potential circular references
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'wuxi-dubbo-provider'
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.wx.provider.DemoService'
[INFO] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3cb5cdba: defining beans [demoService,wuxi-dubbo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.wx.provider.DemoService]; root of factory hierarchy
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'wuxi-dubbo-provider'
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-05-14 21:39:50][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.wx.provider.DemoService'
[INFO] [2018-05-14 21:39:50][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.wx.provider.DemoService, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 21:39:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 21:39:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 21:39:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-14 21:39:53][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.wx.provider.DemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-14 21:39:53][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.wx.provider.DemoService to url dubbo://192.168.0.101:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=613&side=provider&timestamp=1526305193906, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-14 21:39:53][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.wx.provider.DemoService url dubbo://192.168.0.101:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=613&side=provider&timestamp=1526305193906 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wuxi-dubbo-provider&dubbo=2.5.3&pid=613&registry=zookeeper&timestamp=1526305190748, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 21:39:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 21:39:53][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 21:39:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 21:39:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 21:39:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 21:39:54][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-14 21:39:54][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.0.101:20880, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 21:39:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-14 21:39:54][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file /Users/wuxi/.dubbo/dubbo-registry-localhost.cache, data: {com.cn.provider.DemoService=empty://10.33.100.121/com.cn.provider.DemoService?application=dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.cn.provider.DemoService&methods=getName&pid=1793&revision=provider&side=consumer&timestamp=1526288088475 empty://10.33.100.121/com.cn.provider.DemoService?application=dubbo-customer&category=routers&dubbo=2.5.3&interface=com.cn.provider.DemoService&methods=getName&pid=1793&revision=provider&side=consumer&timestamp=1526288088475 dubbo://10.33.100.121:20880/com.cn.provider.DemoService?anyhost=true&application=dubbo-provider&dubbo=2.5.3&interface=com.cn.provider.DemoService&methods=getName&pid=1791&side=provider&timestamp=1526288032212}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 21:39:54][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to localhost:2181.
[INFO] [2018-05-14 21:39:54][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[DEBUG] [2018-05-14 21:39:54][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[INFO] [2018-05-14 21:39:54][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[DEBUG] [2018-05-14 21:39:54][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO] [2018-05-14 21:39:54][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG] [2018-05-14 21:39:54][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG] [2018-05-14 21:39:54][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[INFO] [2018-05-14 21:39:54][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://192.168.0.101:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=613&side=provider&timestamp=1526305193906, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-14 21:39:54][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: provider://192.168.0.101:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=613&side=provider&timestamp=1526305193906, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-14 21:39:54][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url provider://192.168.0.101:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=613&side=provider&timestamp=1526305193906, urls: [empty://192.168.0.101:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=613&side=provider&timestamp=1526305193906], dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 21:39:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 21:39:54][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 22:46:17][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 22:47:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 22:47:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 22:48:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 22:48:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 22:49:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 22:49:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 22:50:39][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 22:51:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 22:51:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 22:52:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 22:52:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 22:53:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 22:53:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 22:54:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 22:54:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 22:55:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 22:55:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 22:56:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 22:56:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 22:57:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 22:57:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 22:59:17][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Received heartbeat from remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:00:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:00:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:01:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:01:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:02:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:02:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:03:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:03:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:04:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:04:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:05:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:05:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:06:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:06:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:07:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:07:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:08:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:08:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:09:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:09:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:10:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:10:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:11:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:11:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:12:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:12:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:13:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:13:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:14:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:14:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:15:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:15:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:16:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:16:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:17:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:17:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:18:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:18:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:19:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:19:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:20:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:20:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:21:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:21:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:22:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:22:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:23:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:23:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:24:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:24:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:25:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:25:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:26:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:26:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:27:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:27:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:28:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /192.168.0.101:50200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:28:54][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-14 23:29:51][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-14 23:29:51][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=613&timestamp=1526305190748], dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-14 23:29:51][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=613&timestamp=1526305190748, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-14 23:29:51][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://192.168.0.101:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=613&side=provider&timestamp=1526305193906, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-14 23:29:51][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url dubbo://192.168.0.101:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=613&side=provider&timestamp=1526305193906, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-14 23:29:51][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: provider://192.168.0.101:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=613&side=provider&timestamp=1526305193906, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-14 23:29:51][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url provider://192.168.0.101:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=613&side=provider&timestamp=1526305193906, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-14 23:29:51][org.I0Itec.zkclient.ZkClient]Closing ZkClient...
[INFO] [2018-05-14 23:29:51][org.I0Itec.zkclient.ZkEventThread]Terminate ZkClient event thread.
[DEBUG] [2018-05-14 23:29:51][org.I0Itec.zkclient.ZkConnection]Closing ZooKeeper connected to localhost:2181
[DEBUG] [2018-05-14 23:29:51][org.I0Itec.zkclient.ZkClient]Closing ZkClient...done
[INFO] [2018-05-14 23:29:51][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /192.168.0.101:20880, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-14 23:29:51][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.0.101:20880, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-14 23:29:51][com.alibaba.dubbo.remoting.transport.netty.NettyChannel] [DUBBO] Close netty channel [id: 0x75cd76d1, /192.168.0.101:50200 => /192.168.0.101:20880], dubbo version: 2.5.3, current host: 127.0.0.1
[WARN] [2018-05-14 23:29:51][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] All clients has discontected from /192.168.0.101:20880. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-14 23:29:51][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconected from /192.168.0.101:50200,url:dubbo://192.168.0.101:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.wx.provider.DemoService&methods=getStr&pid=613&side=provider&timestamp=1526305193906, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-14 23:29:51][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://192.168.0.101:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=613&side=provider&timestamp=1526305193906, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-14 23:29:51][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=613&side=provider&timestamp=1526305193906, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-23 18:09:12][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@694f9431: display name [org.springframework.context.support.ClassPathXmlApplicationContext@694f9431]; startup date [Wed May 23 18:09:12 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-23 18:09:13][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-23 18:09:13][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-23 18:09:13][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-23 18:09:13][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-23 18:09:13][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-23 18:09:13][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-23 18:09:13][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-23 18:09:13][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-23 18:09:13][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[INFO] [2018-05-23 18:09:13][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [provider.xml]
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
[INFO] [2018-05-23 18:09:13][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [provider.xml]
[INFO] [2018-05-23 18:09:13][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@694f9431]: org.springframework.beans.factory.support.DefaultListableBeanFactory@3cb5cdba
[DEBUG] [2018-05-23 18:09:13][org.springframework.context.support.ClassPathXmlApplicationContext]5 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@694f9431: display name [org.springframework.context.support.ClassPathXmlApplicationContext@694f9431]; startup date [Wed May 23 18:09:12 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-23 18:09:13][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@511baa65]
[DEBUG] [2018-05-23 18:09:13][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@59a6e353]
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.wx.provider.DemoService'
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.wx.provider.DemoService'
[DEBUG] [2018-05-23 18:09:13][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-23 18:09:13][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.wx.provider.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.wx.provider.DemoService'
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'wuxi-dubbo-provider'
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'wuxi-dubbo-provider'
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'wuxi-dubbo-provider' to allow for resolving potential circular references
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'wuxi-dubbo-provider'
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.wx.provider.DemoService'
[INFO] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3cb5cdba: defining beans [demoService,wuxi-dubbo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.wx.provider.DemoService]; root of factory hierarchy
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'wuxi-dubbo-provider'
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-05-23 18:09:13][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.wx.provider.DemoService'
[INFO] [2018-05-23 18:09:13][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.wx.provider.DemoService, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-23 18:09:13][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-23 18:09:13][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-23 18:09:13][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-23 18:09:13][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.wx.provider.DemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-23 18:09:13][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.wx.provider.DemoService to url dubbo://10.33.101.233:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3064&side=provider&timestamp=1527070153623, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-23 18:09:13][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.wx.provider.DemoService url dubbo://10.33.101.233:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3064&side=provider&timestamp=1527070153623 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wuxi-dubbo-provider&dubbo=2.5.3&pid=3064&registry=zookeeper&timestamp=1527070153602, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-23 18:09:13][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-23 18:09:13][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-23 18:09:13][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-23 18:09:13][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-23 18:09:13][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-23 18:09:13][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-23 18:09:13][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /10.33.101.233:20880, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-23 18:09:13][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-23 18:09:13][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file /Users/wuxi/.dubbo/dubbo-registry-localhost.cache, data: {com.wx.provider.DemoService=empty://192.168.0.101/com.wx.provider.DemoService?application=wx-dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=712&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1526309437629 empty://192.168.0.101/com.wx.provider.DemoService?application=wx-dubbo-customer&category=routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=712&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1526309437629 empty://192.168.0.101/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=712&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1526309437629, com.cn.provider.DemoService=empty://10.33.101.233:20880/com.cn.provider.DemoService?anyhost=true&application=dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.cn.provider.DemoService&methods=getName&pid=1942&side=provider&timestamp=1527055385348}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-23 18:09:13][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to localhost:2181.
[INFO] [2018-05-23 18:09:13][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[DEBUG] [2018-05-23 18:09:13][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[INFO] [2018-05-23 18:09:13][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[DEBUG] [2018-05-23 18:09:14][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO] [2018-05-23 18:09:14][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG] [2018-05-23 18:09:14][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG] [2018-05-23 18:09:14][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[INFO] [2018-05-23 18:09:14][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://10.33.101.233:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3064&side=provider&timestamp=1527070153623, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-23 18:09:14][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: provider://10.33.101.233:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3064&side=provider&timestamp=1527070153623, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-23 18:09:14][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url provider://10.33.101.233:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3064&side=provider&timestamp=1527070153623, urls: [empty://10.33.101.233:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3064&side=provider&timestamp=1527070153623], dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-23 18:09:14][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-23 18:09:14][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-23 18:12:20][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
[WARN] [2018-05-23 18:12:58][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] All clients has discontected from /10.33.101.233:20880. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-23 18:12:58][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconected from /10.33.101.233:58098,url:dubbo://10.33.101.233:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.wx.provider.DemoService&methods=getStr&pid=3064&side=provider&timestamp=1527070153623, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-23 18:13:00][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-23 18:13:00][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=3064&timestamp=1527070153602], dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-23 18:13:00][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=3064&timestamp=1527070153602, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-23 18:13:00][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://10.33.101.233:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3064&side=provider&timestamp=1527070153623, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-23 18:13:00][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url dubbo://10.33.101.233:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3064&side=provider&timestamp=1527070153623, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-23 18:13:00][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: provider://10.33.101.233:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3064&side=provider&timestamp=1527070153623, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-23 18:13:00][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url provider://10.33.101.233:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3064&side=provider&timestamp=1527070153623, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-23 18:13:00][org.I0Itec.zkclient.ZkClient]Closing ZkClient...
[INFO] [2018-05-23 18:13:00][org.I0Itec.zkclient.ZkEventThread]Terminate ZkClient event thread.
[DEBUG] [2018-05-23 18:13:00][org.I0Itec.zkclient.ZkConnection]Closing ZooKeeper connected to localhost:2181
[DEBUG] [2018-05-23 18:13:00][org.I0Itec.zkclient.ZkClient]Closing ZkClient...done
[INFO] [2018-05-23 18:13:00][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /10.33.101.233:20880, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-23 18:13:00][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /10.33.101.233:20880, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-23 18:13:00][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://10.33.101.233:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3064&side=provider&timestamp=1527070153623, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-23 18:13:00][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3064&side=provider&timestamp=1527070153623, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 17:46:14][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@ea30797: display name [org.springframework.context.support.ClassPathXmlApplicationContext@ea30797]; startup date [Thu May 24 17:46:14 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-24 17:46:14][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-24 17:46:14][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-24 17:46:14][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-24 17:46:14][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-24 17:46:14][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-24 17:46:14][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-24 17:46:14][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-24 17:46:14][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-24 17:46:14][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[INFO] [2018-05-24 17:46:14][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [provider.xml]
[DEBUG] [2018-05-24 17:46:14][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-05-24 17:46:14][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-05-24 17:46:14][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://activemq.apache.org/schema/core/activemq-core.xsd=activemq.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://activemq.org/config/1.0/1.0.xsd=activemq.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://activemq.org/config/1.0=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.1.xsd=activemq.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.1.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.1.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://activemq.apache.org/schema/core=activemq.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.1.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.6.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.0.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd=activemq.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://activemq.apache.org/schema/core/activemq-core-5.8.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.7.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.2.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.2.xsd=activemq.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
[DEBUG] [2018-05-24 17:46:14][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
[DEBUG] [2018-05-24 17:46:14][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-05-24 17:46:14][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://activemq.apache.org/schema/core=org.apache.xbean.spring.context.v2.XBeanNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
[INFO] [2018-05-24 17:46:15][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [provider.xml]
[INFO] [2018-05-24 17:46:15][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@ea30797]: org.springframework.beans.factory.support.DefaultListableBeanFactory@60f82f98
[DEBUG] [2018-05-24 17:46:15][org.springframework.context.support.ClassPathXmlApplicationContext]5 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@ea30797: display name [org.springframework.context.support.ClassPathXmlApplicationContext@ea30797]; startup date [Thu May 24 17:46:14 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-24 17:46:15][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@783e6358]
[DEBUG] [2018-05-24 17:46:15][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@2ef9b8bc]
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.wx.provider.DemoService'
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.wx.provider.DemoService'
[DEBUG] [2018-05-24 17:46:15][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:46:15][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.wx.provider.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.wx.provider.DemoService'
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'wuxi-dubbo-provider'
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'wuxi-dubbo-provider'
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'wuxi-dubbo-provider' to allow for resolving potential circular references
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'wuxi-dubbo-provider'
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.wx.provider.DemoService'
[INFO] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@60f82f98: defining beans [demoService,wuxi-dubbo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.wx.provider.DemoService]; root of factory hierarchy
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'wuxi-dubbo-provider'
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-05-24 17:46:15][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.wx.provider.DemoService'
[INFO] [2018-05-24 17:46:15][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.wx.provider.DemoService, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:46:15][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:46:15][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:46:15][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 17:46:15][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.wx.provider.DemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 17:46:15][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.wx.provider.DemoService to url dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2206&side=provider&timestamp=1527155175298, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 17:46:15][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.wx.provider.DemoService url dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2206&side=provider&timestamp=1527155175298 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wuxi-dubbo-provider&dubbo=2.5.3&pid=2206&registry=zookeeper&timestamp=1527155175277, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:46:15][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:46:15][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:46:15][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:46:15][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:46:15][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:46:15][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 17:46:15][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /10.33.100.126:20880, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:46:15][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 17:46:15][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file /Users/wuxi/.dubbo/dubbo-registry-localhost.cache, data: {com.wx.provider.DemoService=empty://10.33.101.233/com.wx.provider.DemoService?application=wx-dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3068&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527070340208 empty://10.33.101.233/com.wx.provider.DemoService?application=wx-dubbo-customer&category=routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3068&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527070340208 dubbo://10.33.101.233:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3064&side=provider&timestamp=1527070153623, com.cn.provider.DemoService=empty://10.33.101.233:20880/com.cn.provider.DemoService?anyhost=true&application=dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.cn.provider.DemoService&methods=getName&pid=1942&side=provider&timestamp=1527055385348}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:46:15][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to localhost:2181.
[INFO] [2018-05-24 17:46:15][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[DEBUG] [2018-05-24 17:46:15][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[INFO] [2018-05-24 17:46:15][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[DEBUG] [2018-05-24 17:46:15][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO] [2018-05-24 17:46:15][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG] [2018-05-24 17:46:15][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG] [2018-05-24 17:46:15][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[INFO] [2018-05-24 17:46:15][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2206&side=provider&timestamp=1527155175298, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 17:46:15][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: provider://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2206&side=provider&timestamp=1527155175298, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 17:46:15][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url provider://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2206&side=provider&timestamp=1527155175298, urls: [empty://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2206&side=provider&timestamp=1527155175298], dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:46:15][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:46:15][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:46:54][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
[WARN] [2018-05-24 17:47:00][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] All clients has discontected from /10.33.100.126:20880. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 17:47:00][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconected from /10.33.100.126:52178,url:dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.wx.provider.DemoService&methods=getStr&pid=2206&side=provider&timestamp=1527155175298, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:50:34][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
[WARN] [2018-05-24 17:50:34][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] All clients has discontected from /10.33.100.126:20880. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 17:50:34][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconected from /10.33.100.126:52241,url:dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.wx.provider.DemoService&methods=getStr&pid=2206&side=provider&timestamp=1527155175298, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 17:50:50][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 17:50:50][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=2206&timestamp=1527155175277], dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 17:50:50][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=2206&timestamp=1527155175277, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 17:50:50][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2206&side=provider&timestamp=1527155175298, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 17:50:50][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2206&side=provider&timestamp=1527155175298, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 17:50:50][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: provider://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2206&side=provider&timestamp=1527155175298, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 17:50:50][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url provider://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2206&side=provider&timestamp=1527155175298, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 17:50:50][org.I0Itec.zkclient.ZkClient]Closing ZkClient...
[INFO] [2018-05-24 17:50:50][org.I0Itec.zkclient.ZkEventThread]Terminate ZkClient event thread.
[DEBUG] [2018-05-24 17:50:50][org.I0Itec.zkclient.ZkConnection]Closing ZooKeeper connected to localhost:2181
[DEBUG] [2018-05-24 17:50:50][org.I0Itec.zkclient.ZkClient]Closing ZkClient...done
[INFO] [2018-05-24 17:50:50][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /10.33.100.126:20880, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 17:50:50][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /10.33.100.126:20880, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 17:50:50][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2206&side=provider&timestamp=1527155175298, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 17:50:50][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2206&side=provider&timestamp=1527155175298, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 19:53:38][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@ea30797: display name [org.springframework.context.support.ClassPathXmlApplicationContext@ea30797]; startup date [Thu May 24 19:53:38 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-24 19:53:38][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-24 19:53:38][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-24 19:53:38][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-24 19:53:38][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-24 19:53:38][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-24 19:53:38][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-24 19:53:38][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-24 19:53:38][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-24 19:53:38][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[INFO] [2018-05-24 19:53:38][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [provider.xml]
[DEBUG] [2018-05-24 19:53:38][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-05-24 19:53:38][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-05-24 19:53:38][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://activemq.apache.org/schema/core/activemq-core.xsd=activemq.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://activemq.org/config/1.0/1.0.xsd=activemq.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://activemq.org/config/1.0=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.1.xsd=activemq.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.1.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.1.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://activemq.apache.org/schema/core=activemq.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.1.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.6.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.0.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd=activemq.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://activemq.apache.org/schema/core/activemq-core-5.8.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.7.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.2.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.2.xsd=activemq.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
[DEBUG] [2018-05-24 19:53:38][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
[DEBUG] [2018-05-24 19:53:38][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-05-24 19:53:38][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-05-24 19:53:38][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://activemq.apache.org/schema/core=org.apache.xbean.spring.context.v2.XBeanNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
[INFO] [2018-05-24 19:53:38][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-05-24 19:53:38][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [provider.xml]
[INFO] [2018-05-24 19:53:38][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@ea30797]: org.springframework.beans.factory.support.DefaultListableBeanFactory@60f82f98
[DEBUG] [2018-05-24 19:53:38][org.springframework.context.support.ClassPathXmlApplicationContext]5 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@ea30797: display name [org.springframework.context.support.ClassPathXmlApplicationContext@ea30797]; startup date [Thu May 24 19:53:38 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-24 19:53:38][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@783e6358]
[DEBUG] [2018-05-24 19:53:38][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@2ef9b8bc]
[DEBUG] [2018-05-24 19:53:38][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.wx.provider.DemoService'
[DEBUG] [2018-05-24 19:53:38][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.wx.provider.DemoService'
[DEBUG] [2018-05-24 19:53:38][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 19:53:38][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 19:53:38][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.wx.provider.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-05-24 19:53:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-05-24 19:53:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-05-24 19:53:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-05-24 19:53:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-05-24 19:53:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.wx.provider.DemoService'
[DEBUG] [2018-05-24 19:53:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'wuxi-dubbo-provider'
[DEBUG] [2018-05-24 19:53:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'wuxi-dubbo-provider'
[DEBUG] [2018-05-24 19:53:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'wuxi-dubbo-provider' to allow for resolving potential circular references
[DEBUG] [2018-05-24 19:53:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'wuxi-dubbo-provider'
[DEBUG] [2018-05-24 19:53:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 19:53:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 19:53:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-05-24 19:53:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 19:53:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-05-24 19:53:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-05-24 19:53:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-05-24 19:53:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-05-24 19:53:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.wx.provider.DemoService'
[INFO] [2018-05-24 19:53:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@60f82f98: defining beans [demoService,wuxi-dubbo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.wx.provider.DemoService]; root of factory hierarchy
[DEBUG] [2018-05-24 19:53:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-05-24 19:53:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'wuxi-dubbo-provider'
[DEBUG] [2018-05-24 19:53:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-24 19:53:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-05-24 19:53:39][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.wx.provider.DemoService'
[INFO] [2018-05-24 19:53:39][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.wx.provider.DemoService, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 19:53:39][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 19:53:39][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 19:53:39][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 19:53:39][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.wx.provider.DemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 19:53:39][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.wx.provider.DemoService to url dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 19:53:39][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.wx.provider.DemoService url dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wuxi-dubbo-provider&dubbo=2.5.3&pid=2625&registry=zookeeper&timestamp=1527162819042, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 19:53:39][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 19:53:39][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 19:53:39][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 19:53:39][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 19:53:39][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 19:53:39][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 19:53:39][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /10.33.100.126:20880, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 19:53:39][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 19:53:39][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file /Users/wuxi/.dubbo/dubbo-registry-localhost.cache, data: {com.wx.provider.DemoService=empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2210&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155433592 empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2210&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527155433592 dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2206&side=provider&timestamp=1527155175298, com.cn.provider.DemoService=empty://10.33.101.233:20880/com.cn.provider.DemoService?anyhost=true&application=dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.cn.provider.DemoService&methods=getName&pid=1942&side=provider&timestamp=1527055385348}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 19:53:39][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to localhost:2181.
[INFO] [2018-05-24 19:53:39][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[DEBUG] [2018-05-24 19:53:39][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[INFO] [2018-05-24 19:53:39][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[DEBUG] [2018-05-24 19:53:39][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO] [2018-05-24 19:53:39][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG] [2018-05-24 19:53:39][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG] [2018-05-24 19:53:39][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[INFO] [2018-05-24 19:53:39][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 19:53:39][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: provider://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 19:53:39][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url provider://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057, urls: [empty://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057], dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 19:53:39][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 19:53:39][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:00:55][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:02:39][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:02:39][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.33.100.126:54020, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:03:39][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.33.100.126:54020, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:03:39][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:03:54][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:03:54][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconected from /10.33.100.126:54032,url:dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:04:39][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.33.100.126:54020, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:04:39][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:04:47][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:04:47][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconected from /10.33.100.126:54036,url:dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:05:39][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.33.100.126:54020, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:05:39][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
[WARN] [2018-05-24 20:06:10][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] All clients has discontected from /10.33.100.126:20880. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:06:10][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconected from /10.33.100.126:54020,url:dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:06:19][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
[WARN] [2018-05-24 20:06:19][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] All clients has discontected from /10.33.100.126:20880. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:06:19][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconected from /10.33.100.126:54042,url:dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:06:48][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
[WARN] [2018-05-24 20:06:48][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] All clients has discontected from /10.33.100.126:20880. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:06:48][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconected from /10.33.100.126:54047,url:dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:32:50][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:34:39][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.33.100.126:54200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:34:39][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-6, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:35:06][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:36:39][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.33.100.126:54200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:36:39][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-6, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:37:39][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.33.100.126:54200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:37:39][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-6, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:38:39][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.33.100.126:54200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:38:39][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-6, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:39:39][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.33.100.126:54200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:39:39][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-6, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:40:39][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.33.100.126:54200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:40:39][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-6, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:41:39][com.alibaba.dubbo.remoting.exchange.support.header.HeartBeatTask] [DUBBO] Send heartbeat to remote channel /10.33.100.126:54200, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:41:39][com.alibaba.dubbo.remoting.exchange.support.header.HeartbeatHandler] [DUBBO] Receive heartbeat response in thread New I/O server worker #1-6, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:41:55][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:41:55][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=2625&timestamp=1527162819042], dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:41:55][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=2625&timestamp=1527162819042, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:41:55][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:41:55][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:41:55][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: provider://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:41:55][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url provider://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-24 20:41:55][org.I0Itec.zkclient.ZkClient]Closing ZkClient...
[INFO] [2018-05-24 20:41:55][org.I0Itec.zkclient.ZkEventThread]Terminate ZkClient event thread.
[DEBUG] [2018-05-24 20:41:55][org.I0Itec.zkclient.ZkConnection]Closing ZooKeeper connected to localhost:2181
[DEBUG] [2018-05-24 20:41:55][org.I0Itec.zkclient.ZkClient]Closing ZkClient...done
[INFO] [2018-05-24 20:41:55][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /10.33.100.126:20880, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:41:55][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /10.33.100.126:20880, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:41:55][com.alibaba.dubbo.remoting.transport.netty.NettyChannel] [DUBBO] Close netty channel [id: 0x7ea41a2f, /10.33.100.126:54200 => /10.33.100.126:20880], dubbo version: 2.5.3, current host: 127.0.0.1
[WARN] [2018-05-24 20:41:55][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] All clients has discontected from /10.33.100.126:20880. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:41:55][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconected from /10.33.100.126:54200,url:dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:41:55][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-24 20:41:55][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=2625&side=provider&timestamp=1527162819057, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-25 16:17:02][org.springframework.context.support.ClassPathXmlApplicationContext]Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@ea30797: display name [org.springframework.context.support.ClassPathXmlApplicationContext@ea30797]; startup date [Fri May 25 16:17:02 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-25 16:17:02][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-25 16:17:02][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-25 16:17:02][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-25 16:17:02][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-25 16:17:02][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-25 16:17:02][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-25 16:17:02][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-25 16:17:02][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[DEBUG] [2018-05-25 16:17:02][org.springframework.core.CollectionFactory]Falling back to plain synchronized [java.util.HashMap] for concurrent map
[INFO] [2018-05-25 16:17:02][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loading XML bean definitions from class path resource [provider.xml]
[DEBUG] [2018-05-25 16:17:02][org.springframework.beans.factory.xml.DefaultDocumentLoader]Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
[DEBUG] [2018-05-25 16:17:02][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loading schema mappings from [META-INF/spring.schemas]
[DEBUG] [2018-05-25 16:17:02][org.springframework.beans.factory.xml.PluggableSchemaResolver]Loaded schema mappings: {http://activemq.apache.org/schema/core/activemq-core.xsd=activemq.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://activemq.org/config/1.0/1.0.xsd=activemq.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://activemq.org/config/1.0=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.1.xsd=activemq.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.1.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.1.xsd=activemq.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://activemq.apache.org/schema/core=activemq.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.10.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.1.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.9.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.6.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.0.xsd=activemq.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://activemq.apache.org/schema/core/activemq-core-5.0.0.xsd=activemq.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://activemq.apache.org/schema/core/activemq-core-5.8.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.5.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.7.0.xsd=activemq.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://activemq.apache.org/schema/core/activemq-core-5.4.2.xsd=activemq.xsd, http://activemq.apache.org/schema/core/activemq-core-5.3.2.xsd=activemq.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
[DEBUG] [2018-05-25 16:17:02][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
[DEBUG] [2018-05-25 16:17:02][org.springframework.beans.factory.xml.PluggableSchemaResolver]Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd
[DEBUG] [2018-05-25 16:17:02][org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader]Loading bean definitions
[DEBUG] [2018-05-25 16:17:02][org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver]Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://activemq.apache.org/schema/core=org.apache.xbean.spring.context.v2.XBeanNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
[INFO] [2018-05-25 16:17:02][com.alibaba.dubbo.common.logger.LoggerFactory]using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
[DEBUG] [2018-05-25 16:17:02][org.springframework.beans.factory.xml.XmlBeanDefinitionReader]Loaded 5 bean definitions from location pattern [provider.xml]
[INFO] [2018-05-25 16:17:02][org.springframework.context.support.ClassPathXmlApplicationContext]Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@ea30797]: org.springframework.beans.factory.support.DefaultListableBeanFactory@60f82f98
[DEBUG] [2018-05-25 16:17:02][org.springframework.context.support.ClassPathXmlApplicationContext]5 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@ea30797: display name [org.springframework.context.support.ClassPathXmlApplicationContext@ea30797]; startup date [Fri May 25 16:17:02 CST 2018]; root of context hierarchy
[DEBUG] [2018-05-25 16:17:02][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@783e6358]
[DEBUG] [2018-05-25 16:17:02][org.springframework.context.support.ClassPathXmlApplicationContext]Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@2ef9b8bc]
[DEBUG] [2018-05-25 16:17:02][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.wx.provider.DemoService'
[DEBUG] [2018-05-25 16:17:02][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.wx.provider.DemoService'
[DEBUG] [2018-05-25 16:17:02][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-25 16:17:02][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-25 16:17:02][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.wx.provider.DemoService' to allow for resolving potential circular references
[DEBUG] [2018-05-25 16:17:03][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'demoService'
[DEBUG] [2018-05-25 16:17:03][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'demoService'
[DEBUG] [2018-05-25 16:17:03][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'demoService' to allow for resolving potential circular references
[DEBUG] [2018-05-25 16:17:03][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'demoService'
[DEBUG] [2018-05-25 16:17:03][org.springframework.beans.factory.support.DefaultListableBeanFactory]Invoking afterPropertiesSet() on bean with name 'com.wx.provider.DemoService'
[DEBUG] [2018-05-25 16:17:03][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'wuxi-dubbo-provider'
[DEBUG] [2018-05-25 16:17:03][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'wuxi-dubbo-provider'
[DEBUG] [2018-05-25 16:17:03][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'wuxi-dubbo-provider' to allow for resolving potential circular references
[DEBUG] [2018-05-25 16:17:03][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'wuxi-dubbo-provider'
[DEBUG] [2018-05-25 16:17:03][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-25 16:17:03][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-25 16:17:03][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references
[DEBUG] [2018-05-25 16:17:03][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-25 16:17:03][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating shared instance of singleton bean 'dubbo'
[DEBUG] [2018-05-25 16:17:03][org.springframework.beans.factory.support.DefaultListableBeanFactory]Creating instance of bean 'dubbo'
[DEBUG] [2018-05-25 16:17:03][org.springframework.beans.factory.support.DefaultListableBeanFactory]Eagerly caching bean 'dubbo' to allow for resolving potential circular references
[DEBUG] [2018-05-25 16:17:03][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'dubbo'
[DEBUG] [2018-05-25 16:17:03][org.springframework.beans.factory.support.DefaultListableBeanFactory]Finished creating instance of bean 'com.wx.provider.DemoService'
[INFO] [2018-05-25 16:17:03][org.springframework.beans.factory.support.DefaultListableBeanFactory]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@60f82f98: defining beans [demoService,wuxi-dubbo-provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.wx.provider.DemoService]; root of factory hierarchy
[DEBUG] [2018-05-25 16:17:03][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'demoService'
[DEBUG] [2018-05-25 16:17:03][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'wuxi-dubbo-provider'
[DEBUG] [2018-05-25 16:17:03][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig'
[DEBUG] [2018-05-25 16:17:03][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'dubbo'
[DEBUG] [2018-05-25 16:17:03][org.springframework.beans.factory.support.DefaultListableBeanFactory]Returning cached instance of singleton bean 'com.wx.provider.DemoService'
[INFO] [2018-05-25 16:17:03][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] The service ready on spring started. service: com.wx.provider.DemoService, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-25 16:17:03][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-25 16:17:03][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-25 16:17:03][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-25 16:17:03][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.wx.provider.DemoService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-25 16:17:03][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Export dubbo service com.wx.provider.DemoService to url dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=1022&side=provider&timestamp=1527236223054, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-25 16:17:03][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Register dubbo service com.wx.provider.DemoService url dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=1022&side=provider&timestamp=1527236223054 to registry registry://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wuxi-dubbo-provider&dubbo=2.5.3&pid=1022&registry=zookeeper&timestamp=1527236223034, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-25 16:17:03][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-25 16:17:03][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-25 16:17:03][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-25 16:17:03][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-25 16:17:03][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-25 16:17:03][org.jboss.netty.channel.socket.nio.NioProviderMetadata] [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-25 16:17:03][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /10.33.100.126:20880, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-25 16:17:03][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-25 16:17:03][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Load registry store file /Users/wuxi/.dubbo/dubbo-registry-localhost.cache, data: {com.wx.provider.DemoService=empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=configurators&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3376&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527165306024 empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=routers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3376&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527165306024 empty://10.33.100.126/com.wx.provider.DemoService?application=wx-dubbo-customer&category=providers&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=3376&revision=0.0.1-SNAPSHOT&side=consumer&timestamp=1527165306024, com.cn.provider.DemoService=empty://10.33.101.233:20880/com.cn.provider.DemoService?anyhost=true&application=dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.cn.provider.DemoService&methods=getName&pid=1942&side=provider&timestamp=1527055385348}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-25 16:17:03][org.I0Itec.zkclient.ZkConnection]Creating new ZookKeeper instance to connect to localhost:2181.
[INFO] [2018-05-25 16:17:03][org.I0Itec.zkclient.ZkEventThread]Starting ZkClient event thread.
[DEBUG] [2018-05-25 16:17:03][org.I0Itec.zkclient.ZkClient]Awaiting connection to Zookeeper server
[INFO] [2018-05-25 16:17:03][org.I0Itec.zkclient.ZkClient]Waiting for keeper state SyncConnected
[DEBUG] [2018-05-25 16:17:03][org.I0Itec.zkclient.ZkClient]Received event: WatchedEvent state:SyncConnected type:None path:null
[INFO] [2018-05-25 16:17:03][org.I0Itec.zkclient.ZkClient]zookeeper state changed (SyncConnected)
[DEBUG] [2018-05-25 16:17:03][org.I0Itec.zkclient.ZkClient]Leaving process event
[DEBUG] [2018-05-25 16:17:03][org.I0Itec.zkclient.ZkClient]State is SyncConnected
[INFO] [2018-05-25 16:17:03][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Register: dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=1022&side=provider&timestamp=1527236223054, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-25 16:17:03][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Subscribe: provider://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=1022&side=provider&timestamp=1527236223054, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-25 16:17:03][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Notify urls for subscribe url provider://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=1022&side=provider&timestamp=1527236223054, urls: [empty://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=1022&side=provider&timestamp=1527236223054], dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-25 16:17:03][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-25 16:17:03][com.alibaba.dubbo.common.extension.ExtensionLoader] [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-25 16:23:09][com.alibaba.dubbo.remoting.transport.DecodeHandler] [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
[WARN] [2018-05-25 16:23:40][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] All clients has discontected from /10.33.100.126:20880. You can graceful shutdown now., dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-25 16:23:40][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] disconected from /10.33.100.126:56230,url:dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&channel.readonly.sent=true&codec=dubbo&dubbo=2.5.3&heartbeat=60000&interface=com.wx.provider.DemoService&methods=getStr&pid=1022&side=provider&timestamp=1527236223054, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-25 16:26:42][com.alibaba.dubbo.config.AbstractConfig] [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-25 16:26:42][com.alibaba.dubbo.registry.support.AbstractRegistryFactory] [DUBBO] Close all registries [zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=1022&timestamp=1527236223034], dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-25 16:26:42][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy registry:zookeeper://localhost:2181/com.alibaba.dubbo.registry.RegistryService?application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.alibaba.dubbo.registry.RegistryService&pid=1022&timestamp=1527236223034, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-25 16:26:42][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unregister: dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=1022&side=provider&timestamp=1527236223054, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-25 16:26:42][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unregister url dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=1022&side=provider&timestamp=1527236223054, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-25 16:26:42][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Unsubscribe: provider://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=1022&side=provider&timestamp=1527236223054, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-25 16:26:42][com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] [DUBBO] Destroy unsubscribe url provider://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&category=configurators&check=false&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=1022&side=provider&timestamp=1527236223054, dubbo version: 2.5.3, current host: 127.0.0.1
[DEBUG] [2018-05-25 16:26:42][org.I0Itec.zkclient.ZkClient]Closing ZkClient...
[INFO] [2018-05-25 16:26:42][org.I0Itec.zkclient.ZkEventThread]Terminate ZkClient event thread.
[DEBUG] [2018-05-25 16:26:42][org.I0Itec.zkclient.ZkConnection]Closing ZooKeeper connected to localhost:2181
[DEBUG] [2018-05-25 16:26:42][org.I0Itec.zkclient.ZkClient]Closing ZkClient...done
[INFO] [2018-05-25 16:26:42][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Close dubbo server: /10.33.100.126:20880, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-25 16:26:42][com.alibaba.dubbo.remoting.transport.AbstractServer] [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /10.33.100.126:20880, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-25 16:26:42][com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol] [DUBBO] Unexport service: dubbo://10.33.100.126:20880/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=1022&side=provider&timestamp=1527236223054, dubbo version: 2.5.3, current host: 127.0.0.1
[INFO] [2018-05-25 16:26:42][com.alibaba.dubbo.rpc.protocol.injvm.InjvmProtocol] [DUBBO] Unexport service: injvm://127.0.0.1/com.wx.provider.DemoService?anyhost=true&application=wuxi-dubbo-provider&dubbo=2.5.3&interface=com.wx.provider.DemoService&methods=getStr&pid=1022&side=provider&timestamp=1527236223054, dubbo version: 2.5.3, current host: 127.0.0.1
